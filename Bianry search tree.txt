import sys
input = sys.stdin.readline
sys.setrecursionlimit(10 ** 9)

def postorder(start, end):
    if start > end:
        return

    root = preorder[start]
    pivot = end + 1
    for i in range(start+1, end+1):
        if root < preorder[i]:
            pivot = i
            break
    postorder(start+1, pivot - 1)
    postorder(pivot, end)
    print(root)

preorder = []
while True:
    try:
        preorder.append(int(input()))
    except:
        break
if preorder:
    postorder(0, len(preorder) - 1)
---------------------------------------------
이 코드는 이진 검색 트리에서 전위 순호결과를 주었을때 후위순회 결과를 출력한다.
먼저 postorder 함수를 이용하여 후위 순회 결과를 출력한다. Start와 End는 각각 현재 서브트리의 전위 순회 결과에서 첫번째 원소와 마지막 원소를 나타낸다. start가 end 보다 크면 함수를 종료한다. 그리고 for 문을 사용하여 pivot값을 찾는다 문제에서 50 30 24 5 28 45 98 52 60이 주어졌기 때문에 50이 루트 노드가 되고 그 기준으로 왼쪽트리와 오른쪽 트리를 나눈다. 그리고 postorder(start+1, pivot - 1) 를 호출하여 start+1은 현재 노드의 다음에 인덱스, pivot - 1는 마지막 트리에 인덱스 된다. 그리고   postorder(pivot, end)를 호출하여 pivot가 오른쪽 트리에 배열 되도록한 뒤 노드의 값을 출력한다.

그다음 while 문을 사용하여 전위 순회 값을 받는다 
그리고 postorder함수를 호출하여 첫번째 인덱스 0을 전달하고 두번째 인자로는 전위 순회결과의 마지막 인덱스인 len(preorder) - 1을 전달 한다.